basePath: /
definitions:
  models.CreateTodoRequest:
    properties:
      description:
        type: string
      title:
        type: string
    required:
    - title
    type: object
  models.Todo:
    properties:
      completed:
        type: boolean
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.UpdateTodoRequest:
    properties:
      completed:
        type: boolean
      description:
        type: string
      title:
        type: string
    type: object
  utils.Response:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      success:
        type: boolean
    type: object
host: localhost:1323
info:
  contact:
    email: support@example.com
    name: API Support
  description: A simple TODO API built with Echo framework and DynamoDB
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Echo TODO API
  version: "1.0"
paths:
  /api/v1/todos:
    get:
      description: Get all TODO items
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Todo'
                  type: array
              type: object
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get all TODOs
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: Create a new TODO item
      parameters:
      - description: Create TODO request
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/models.CreateTodoRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Todo'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Create a new TODO
      tags:
      - todos
  /api/v1/todos/{id}:
    delete:
      description: Delete a TODO item by ID
      parameters:
      - description: TODO ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: TODO not found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Delete a TODO
      tags:
      - todos
    get:
      description: Get a specific TODO item by ID
      parameters:
      - description: TODO ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Todo'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: TODO not found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get a TODO by ID
      tags:
      - todos
    put:
      consumes:
      - application/json
      description: Update an existing TODO item
      parameters:
      - description: TODO ID
        in: path
        name: id
        required: true
        type: string
      - description: Update TODO request
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/models.UpdateTodoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Todo'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: TODO not found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Update a TODO
      tags:
      - todos
schemes:
- http
- https
swagger: "2.0"
